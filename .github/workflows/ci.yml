name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-onnx-providers:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            provider: "CUDA"
          - os: macos-latest 
            provider: "CoreML"
          - os: windows-latest
            provider: "DirectML"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Test execution provider detection
      run: |
        python -c "
        from docling_onnx_models.common import get_optimal_providers
        import platform
        print(f'Platform: {platform.system()}')
        providers = get_optimal_providers('auto')
        print(f'Auto-selected providers: {providers}')
        assert len(providers) > 0, 'No providers selected'
        assert 'CPUExecutionProvider' in providers, 'CPU provider missing'
        "

  build:
    runs-on: ubuntu-latest
    needs: [test-onnx-providers]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/